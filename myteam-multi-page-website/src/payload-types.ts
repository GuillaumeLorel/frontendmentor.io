/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  name: string;
  slug: string;
  layout?:
    | (
        | {
            title: string;
            subtitle: string;
            text: string;
            leftShape?: (string | null) | Media;
            bottomShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'presentation';
          }
        | {
            title: string;
            elements?:
              | {
                  image?: (string | null) | Media;
                  elementTitle?: string | null;
                  elementText?: string | null;
                  id?: string | null;
                }[]
              | null;
            leftShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'build';
          }
        | {
            title: string;
            subtitle: string;
            testimonials?:
              | {
                  quote: string;
                  name: string;
                  position: string;
                  image: string | Media;
                  id?: string | null;
                }[]
              | null;
            leftShape?: (string | null) | Media;
            rightShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonials';
          }
        | {
            title: string;
            button?:
              | {
                  text: string;
                  link: string;
                  id?: string | null;
                }[]
              | null;
            leftShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'getstarted';
          }
        | {
            title: string;
            logos?:
              | {
                  logo?: (string | null) | Media;
                  id?: string | null;
                }[]
              | null;
            leftShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'clients';
          }
        | {
            title: string;
            text: string;
            rightShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'presentation-about';
          }
        | {
            title: string;
            members?:
              | {
                  image?: (string | null) | Media;
                  name?: string | null;
                  role?: string | null;
                  description?: string | null;
                  socials?:
                    | {
                        icon?: (string | null) | Media;
                        url?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            leftShape?: (string | null) | Media;
            rightShape?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'team';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  logo: string | Media;
  nav?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  cta: {
    label: string;
    link: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  logo: string | Media;
  nav?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  address: string;
  social?:
    | {
        icon: string | Media;
        link: string;
        id?: string | null;
      }[]
    | null;
  copyright: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}